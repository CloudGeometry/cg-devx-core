apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '10'
  name: kubecost
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: kubecost
    server: https://kubernetes.default.svc
  project: core
  source:
    chart: cost-analyzer
    repoURL: https://kubecost.github.io/cost-analyzer/
    targetRevision: 2.2.2
    helm:
      releaseName: kubecost
      values: |
        imagePullSecrets:
         - name: docker-config
        global:
          additionalLabels:
            cg-devx.cost-allocation.cost-center: platform
            cg-devx.metadata.owner: <GITOPS_REPOSITORY_NAME>-admin
            cg-devx.metadata.service: cost-management.kubecost
            cg-devx.metadata.chart-version: 2.2.2
            cg-devx.metadata.version: 2.2.2
          prometheus:
            enabled: false
            fqdn: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
          grafana:
            # disable embedded grafana when upgrading to v2.3
            # https://github.com/kubecost/cost-analyzer-helm-chart/issues/3219
            enabled: true
            domainName: <GRAFANA_INGRESS_URL>
            scheme: "https"
            proxy: false
        kubecostMetrics:
          exporter:
            enabled: true
            serviceMonitor:
              enabled: true
        networkCosts:
          enabled: true
          prometheusScrape: true
          config:
            services:
              # <KUBECOST_CLOUD_PROVIDER_CONFIGURATION>
        serviceMonitor:
          enabled: true
          networkCosts:
            enabled: true
        grafana:
          sidecar:
            dashboards:
              enabled: true
            datasources:
              enabled: false
        # kubecostToken: "put your token here"
        # generated at http://kubecost.com/install, used for alerts tracking and free trials
        # productKey: # apply business or enterprise product license
        #   key: ""
        #   enabled: false
        #   secretname: productkeysecret # create a secret out of a file named productkey.json of format { "key": "kc-b1325234" }
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
