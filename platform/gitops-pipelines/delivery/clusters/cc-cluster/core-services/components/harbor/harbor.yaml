apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: harbor
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: '10'
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: harbor
    server: https://kubernetes.default.svc
  project: core
  source:
    chart: harbor
    repoURL: https://helm.goharbor.io
    targetRevision: v1.16.3
    helm:
      releaseName: harbor
      values: |
        externalURL: https://<REGISTRY_INGRESS_URL>
        imagePullSecrets:
          - name: docker-config
        expose:
          type: ingress
          tls:
            enabled: true
            certSource: secret
            secret:
              secretName: "harbor-tls"
          ingress:
            hosts:
              core: <REGISTRY_INGRESS_URL>
            annotations:
              ingress.kubernetes.io/proxy-body-size: "0"
              nginx.ingress.kubernetes.io/proxy-body-size: "0"
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
              # To be used for the nginx ingress on AKS:
              kubernetes.io/ingress.class: nginx
            labels:
              cg-devx.cost-allocation.cost-center: platform
              cg-devx.metadata.owner: <GITOPS_REPOSITORY_NAME>-admin
              cg-devx.metadata.service: oci-registry.harbor
              cg-devx.metadata.chart-version: 1.16.3
              cg-devx.metadata.version: 2.12.3
        database:
          type: internal
          internal:
            resources:
              requests:
                cpu: 300m
                memory: 512Mi
          podLabels:
            cg-devx.cost-allocation.cost-center: platform
            cg-devx.metadata.owner: <GITOPS_REPOSITORY_NAME>-admin
            cg-devx.metadata.service: oci-registry.harbor
            cg-devx.metadata.chart-version: 1.16.3
            cg-devx.metadata.version: 2.12.3
        registry:
          # set the service account to be used, default if left empty
          serviceAccountName: ""
          automountServiceAccountToken: false
          registry:
            resources:
              requests:
                memory: 256Mi
                cpu: 100m
          controller:
            resources:
              requests:
                memory: 256Mi
                cpu: 100m
          podLabels:
            cg-devx.cost-allocation.cost-center: platform
            cg-devx.metadata.owner: <GITOPS_REPOSITORY_NAME>-admin
            cg-devx.metadata.service: oci-registry.harbor
            cg-devx.metadata.chart-version: 1.16.3
            cg-devx.metadata.version: 2.12.3
        portal:
          resources:
            requests:
              memory: 256Mi
              cpu: 100m
          podLabels:
            cg-devx.cost-allocation.cost-center: platform
            cg-devx.metadata.owner: <GITOPS_REPOSITORY_NAME>-admin
            cg-devx.metadata.service: oci-registry.harbor
            cg-devx.metadata.chart-version: 1.16.3
            cg-devx.metadata.version: 2.12.3
        persistence:
          enabled: true
          imageChartStorage:
            type: filesystem
            filesystem:
              rootdirectory: /storage
          persistentVolumeClaim:
            registry:
              size: 250Gi
        core:
          resources:
            requests:
              memory: 256Mi
              cpu: 100m
          podLabels:
            cg-devx.cost-allocation.cost-center: platform
            cg-devx.metadata.owner: <GITOPS_REPOSITORY_NAME>-admin
            cg-devx.metadata.service: oci-registry.harbor
            cg-devx.metadata.chart-version: 1.16.3
            cg-devx.metadata.version: 2.12.3
        jobservice:
          resources:
            requests:
              memory: 256Mi
              cpu: 100m
          podLabels:
            cg-devx.cost-allocation.cost-center: platform
            cg-devx.metadata.owner: <GITOPS_REPOSITORY_NAME>-admin
            cg-devx.metadata.service: oci-registry.harbor
            cg-devx.metadata.chart-version: 1.16.3
            cg-devx.metadata.version: 2.12.3
        redis:
          type: internal
          internal:
            resources:
              requests:
                memory: 256Mi
                cpu: 100m
          podLabels:
            cg-devx.cost-allocation.cost-center: platform
            cg-devx.metadata.owner: <GITOPS_REPOSITORY_NAME>-admin
            cg-devx.metadata.service: oci-registry.harbor
            cg-devx.metadata.chart-version: 1.16.3
            cg-devx.metadata.version: 2.12.3
        notary:
          enabled: false
          podLabels:
            cg-devx.cost-allocation.cost-center: platform
            cg-devx.metadata.owner: <GITOPS_REPOSITORY_NAME>-admin
            cg-devx.metadata.service: oci-registry.harbor
            cg-devx.metadata.chart-version: 1.16.3
            cg-devx.metadata.version: 2.12.3
        trivy:
          # enabled the flag to enable Trivy scanner
          enabled: true
          podLabels:
            cg-devx.cost-allocation.cost-center: platform
            cg-devx.metadata.owner: <GITOPS_REPOSITORY_NAME>-admin
            cg-devx.metadata.service: oci-registry.harbor
            cg-devx.metadata.chart-version: 1.16.3
            cg-devx.metadata.version: 2.12.3
        updateStrategy:
          type: Recreate
        existingSecretAdminPassword: harbor-admin
        existingSecretAdminPasswordKey: HARBOR_ADMIN_PASSWORD
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Replace=true
