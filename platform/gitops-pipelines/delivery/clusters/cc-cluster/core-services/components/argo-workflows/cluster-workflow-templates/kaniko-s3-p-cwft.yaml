---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: kaniko-s3-p-cwft
spec:
  templates:
    - name: kaniko
      archiveLocation:
        archiveLogs: true
      inputs:
        artifacts:
          - name: git-src
            path: /build
            git:
              repo: '{{workflow.parameters.repo}}'
              revision: '{{workflow.parameters.tag}}'
              sshPrivateKeySecret:
                name: ci-secrets
                key: SSH_PRIVATE_KEY
              depth: 1

      script:
        image: '{{workflow.parameters.gcr-registry-proxy}}/kaniko-project/executor:debug'
        imagePullPolicy: IfNotPresent
        env:
          - name: WL_SERVICE
            value: '{{workflow.parameters.wl-service-name}}'
          - name: WL_SERVICE_DIR
            value: '{{workflow.parameters.wl-service-dir}}'
          - name: REGISTRY_MIRROR
            value: '{{workflow.parameters.kaniko-registry-mirror}}'
          - name: DOCKERHUB_REGISTRY_PROXY
            value: '{{workflow.parameters.dockerhub-registry-proxy}}'
        command: [sh]
        source: |
          DOCKERHUB_PROXY_PREFIX=`basename $DOCKERHUB_REGISTRY_PROXY`
          echo "WL_SERVICE: $WL_SERVICE"
          echo "Dockerfile-parameter {{workflow.parameters.dockerfile}}"
          echo "REGISTRY_MIRROR: $REGISTRY_MIRROR"
          if [ $REGISTRY_MIRROR != NOMIRROR ]
          then
            cd /build/$WL_SERVICE_DIR
            sed -r -i.orig "s/FROM\s+(\S+(\/)\S+)/FROM $DOCKERHUB_PROXY_PREFIX\/\1/;/\//! s/FROM\s+(\S+)/FROM $DOCKERHUB_PROXY_PREFIX\/library\/\1/" Dockerfile
            cat Dockerfile
          fi
          cd /build
          executor \
          --dockerfile={{workflow.parameters.dockerfile}} \
          --context=dir:///build/{{workflow.parameters.build-context}} \
          --no-push \
          --tar-path=/tmp/{{workflow.parameters.wl-service-name}}.tar \
          --registry-mirror={{workflow.parameters.kaniko-registry-mirror}} \
          --snapshot-mode=time \
          --use-new-run \
          --compressed-caching=false \
          --cache={{workflow.parameters.kaniko-cache}} \
          --cache-run-layers \
          --cache-repo={{workflow.parameters.kaniko-cache-repo}}/kaniko-cache/{{workflow.parameters.workload-name}}-{{workflow.parameters.wl-service-name}} 
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker
      outputs:
        artifacts:
          - name: tar-build
            path: /tmp/{{workflow.parameters.wl-service-name}}.tar
            s3:
              key: "{{workflow.parameters.workload-name}}/{{workflow.parameters.tag}}/{{workflow.parameters.wl-service-name}}-tar"
            artifactGC:
              strategy: Never

