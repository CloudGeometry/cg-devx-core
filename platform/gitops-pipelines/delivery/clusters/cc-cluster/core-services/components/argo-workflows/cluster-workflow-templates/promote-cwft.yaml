apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: promote-cwft
spec:
  entrypoint: promote
  templates:
  - name: promote
    inputs:
      artifacts:
      - name: git-src
        path: /src
        git:
          repo: "{{workflow.parameters.repo}}"
          sshPrivateKeySecret:
             name: ci-secrets
             key: SSH_PRIVATE_KEY
          depth: 1        

    script:
        image: "{{workflow.parameters.dockerhub-registry-proxy}}/alpine/git"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: ssh-key-vol
          mountPath: "/etc/ssh-key"
        env:
          - name: ENV_PATH
            value: "{{workflow.parameters.env-path}}"
          - name: SOURCE_ENV
            value: "{{workflow.parameters.source-env}}"
          - name: TARGET_ENV
            value: "{{workflow.parameters.target-env}}"
          - name: PROMOTE_SETTINGS
            value: "{{workflow.parameters.promote-settings}}"
          - name: PROMOTE_CONTAINER
            value: "{{workflow.parameters.promote-container}}"
          - name: PROMOTE_CONFIGMAPS
            value: "{{workflow.parameters.promote-configmaps}}"
          - name: COMMIT_MESSAGE
            value: "{{workflow.parameters.commit-message}}"
        command: [sh]
        source: |
            cd /src
            [[ $PROMOTE_CONTAINER == 'true' ]] && cp -v "${ENV_PATH}/${SOURCE_ENV}/version.yaml" "${ENV_PATH}/${TARGET_ENV}"
            [[ $PROMOTE_SETTINGS == 'true' ]] && cp -v "${ENV_PATH}/${SOURCE_ENV}/settings.yaml" "${ENV_PATH}/${TARGET_ENV}"
            [[ $PROMOTE_CONFIGMAPS == 'true' ]] && cp -v "${ENV_PATH}/${SOURCE_ENV}/cm.yaml" "${ENV_PATH}/${TARGET_ENV}"
            mkdir ~/.ssh
            ssh-keyscan -t rsa <GIT_HOSTNAME> >> ~/.ssh/known_hosts
            cp /etc/ssh-key/SSH_PRIVATE_KEY ~/.ssh/id_rsa
            ssh-keygen -f ~/.ssh/id_rsa -y > ~/.ssh/id_rsa.pub
            git config --global user.email "<GIT_USER_EMAIL>"
            git config --global user.name  "<GIT_USER_NAME>"
            git add . && \
            git commit -m "${COMMIT_MESSAGE}" \
            && git push
            if [ $? -gt 0 ]
              then
                 echo "Please read error explanation above."
             else
                 echo "Commit and Push successful."
            fi
