---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: version-changer-cwft
spec:
  entrypoint: version-changer
  templates:
    - name: version-changer
      inputs:
        artifacts:
          - name: git-src
            path: /src
            git:
              repo: '{{workflow.parameters.gitops-repo}}'
              sshPrivateKeySecret:
                name: ci-secrets
                key: SSH_PRIVATE_KEY
              depth: 1
      script:
        image: '{{workflow.parameters.dockerhub-registry-proxy}}/alpine/git'
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: ssh-key-vol
            mountPath: /etc/ssh-key
        env:
          - name: WL_SERVICE_LIST
            value: '{{workflow.parameters.wl-service-list}}'
          - name: ENV_PATH
            value: '{{workflow.parameters.env-path}}'
          - name: ENV_NAME
            value: '{{workflow.parameters.env-name}}'
          - name: NEW_TAG
            value: '{{workflow.parameters.tag}}'
          - name: MIRROR_PREFIX
            value: '{{workflow.parameters.dockerhub-registry-proxy}}'
        command: [sh]
        source: |-
          cd /src/${ENV_PATH}/${ENV_NAME}
          ls -lr
          if [ -e version.yaml ]
          then
            for SVC_NAME in $WL_SERVICE_LIST
              do
                SVC_NAME=`basename $SVC_NAME`
                echo "Service to up the tag: $SVC_NAME"
                sed -i  -r "s/(^\s*image:.+\/$SVC_NAME)[:,\"].*\s*$/\1:$NEW_TAG\"/" version.yaml
              done
            cat version.yaml
            mkdir ~/.ssh
            ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
            cp /etc/ssh-key/SSH_PRIVATE_KEY ~/.ssh/id_rsa
            ssh-keygen -f ~/.ssh/id_rsa -y > ~/.ssh/id_rsa.pub
            ls -l ~/.ssh
            git config --global user.email "<GIT_USER_EMAIL>"
            git config --global user.name  "<GIT_USER_NAME>"
            git add . && \
            git commit -m "Tag updated for $WL_SERVICE_LIST to $NEW_TAG" \
            && git push
          fi           
          if [ $? -gt 0 ]
          then
             echo "Please read error explanation above."
          else
             echo "Commit and Push successful."
          fi
