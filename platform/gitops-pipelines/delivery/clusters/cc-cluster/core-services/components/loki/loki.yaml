apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '10'
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  name: loki
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: core
  source:
    chart: loki
    helm:
      values: |-
        loki:
          auth_enabled: false
          commonConfig:
            replication_factor: 1
          storage:
            type: 'filesystem'
          rulerConfig:
            alertmanager_url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
            storage:
              type: local
              local:
                directory: /var/loki/rules
            rule_path: /tmp/scratch
            ring:
              kvstore:
                store: inmemory
            enable_api: true
        singleBinary:
          persistence:
            size: "50Gi"
          replicas: 1
          extraVolumeMounts:
            - name: rules
              mountPath: /var/loki/rules/fake
          extraVolumes:
            - name: rules
              configMap:
                name: loki-specific-app-alerting-rules
        test:
          enabled: false
        extraObjects:
        - apiVersion: v1
          kind: ConfigMap
          metadata:
            name: loki-specific-app-alerting-rules
          data:
            monitoring: |-
              groups:
                - name: SpecificAppAlerts
                  rules:
                  - alert: ApplicationTerminated
                    expr: sum by (namespace,pod) (count_over_time({container="specific-app"} |= "application is being force terminated" [15m])) > 0
                    for: 10s
                    labels:
                      severity: warning
                    annotations:
                      message: >-
                        {{ printf "The application {{ $labels.instance }} job {{ $labels.job }} is being force terminated" }}
                      summary: >-
                        {{ printf "Service {{ $labels.namespace }}, Pod {{ $labels.pod }} has being force terminated and is attempting to recover." }}
        monitoring:
          selfMonitoring:
            enabled: false
            grafanaAgent:
              installOperator: false
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 5.36.3
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - ServerSideApply=true
    - CreateNamespace=true
