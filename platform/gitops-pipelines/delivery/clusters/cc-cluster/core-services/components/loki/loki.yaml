apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '10'
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  name: loki
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: core
  source:
    chart: loki
    helm:
      values: |-
        imagePullSecrets: 
          - name: docker-config
        deploymentMode: SingleBinary
        loki:
          auth_enabled: false
          commonConfig:
            replication_factor: 1
          storage:
            type: 'filesystem'
            filesystem:
              chunks_directory: /var/loki/chunks
              rules_directory: /var/loki/rules
              admin_api_directory: /var/loki/admin
          schemaConfig:
            configs:
              - from: "2025-01-01"
                store: tsdb
                object_store: filesystem
                schema: v13
                index:
                  period: 24h
                  prefix: loki_index_
          storage_config:
            filesystem:
              directory: /tmp/loki/
          rulerConfig:
            alertmanager_url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
          podLabels:
            cg-devx.cost-allocation.cost-center: platform
            cg-devx.metadata.owner: <GITOPS_REPOSITORY_NAME>-admin
            cg-devx.metadata.service: log-management.loki
            cg-devx.metadata.chart-version: 6.30.0
            cg-devx.metadata.version: 3.5.0
        test:
          enabled: false
        lokiCanary:
          enabled: true
          resources:
            requests:
              memory: "16Mi"
              cpu: "10m"
        backend:
          replicas: 0
        read:
          replicas: 0
        write:
          replicas: 0
        singleBinary:
          replicas: 1
          persistence:
            size: "50Gi"
          extraVolumeMounts:
            - name: rules
              mountPath: /var/loki/rules/fake
          extraVolumes:
            - name: rules
              configMap:
                name: loki-specific-app-alerting-rules
        resultsCache:
          allocatedMemory: 1024
        chunksCache:
          allocatedMemory: 1024
        extraObjects:
        - apiVersion: v1
          kind: ConfigMap
          metadata:
            name: loki-specific-app-alerting-rules
          data:
            loki-alerting-rules.yaml: |-
              groups:
                - name: SpecificAppAlerts
                  rules:
                  - alert: ApplicationTerminated
                    expr: sum by (namespace,pod) (count_over_time({container="specific-app"} |= "application is being force terminated" [15m])) > 0
                    for: 10s
                    labels:
                      severity: warning
                    annotations:
                      message: >-
                        {{ printf "The application {{ $labels.instance }} job {{ $labels.job }} is being force terminated" }}
                      summary: >-
                        {{ printf "Service {{ $labels.namespace }}, Pod {{ $labels.pod }} has being force terminated and is attempting to recover." }}
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.30.0
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - ServerSideApply=true
    - CreateNamespace=true
